1、Type类
   Type.GetMethods(BindingFlags.Public)  
   返回表示为当前 MethodInfo 定义的匹配指定绑定约束的所有方法的 Type 对象数组。

   Type.GetProperties()  
   返回当前type的所有公共属性
   
   使用typeof,如编译能通过，则跨程序集的反射一定可以正常运行，typeof是强类型的。
   Type type=typeof(NameSpace.Class);
   
   使用Type.GetType("string")反射，非强类型,如果string表示的目标类型不在当前程序集中，则运行时返回null。
   解决办法：首先加载目标程序集，然后在获取类型。
   

２、Marshal类

３、GetFunctionPointerForDelegate(Delegate) 将委托转换为可从非托管代码调用的函数指针。

４、内存池：是一种内存分配方式。

５、Stopwatch:提供一组方法和属性，可用于准确的测量运行时间。

６、IDisposable接口:
提供一种用于释放非托管资源的机制,方法 Dispose():执行与释放或重置非托管资源关联的应用程序定义的任务。

７、Default 关键字：
值类型返回0，引用类型返回Null

８、Params:
使用params关键字可以指定采用数目可变的参数的方法参数

９、EventArgs:
表示包含事件数据的类的基类，并提供要用于不包含事件数据的事件的值。        
10、ManualResetEvent:
通知一个或多个正在等待的线程已发生事件。此类不能被继承。

11、IPEndPoint:
包含应用程序连接到主机上的服务所需的主机和本地或远程端口信息。

12、IntPtr:用于表示指针或句柄的平台特定类型。

13、DllImport:从非托管DLL导出的函数的必要调用信息。

14、volatile: 多用于多线程环境，当一个变量定义为volatile时，读取这个变量的值时候每次都是从momery里面读取而不是从cache读。

15、Boehm GC:贝姆垃圾收集器,保守的垃圾回收器。

16、命名空间：用于对类型进行逻辑分组,主要针对开发人员。
    程序集：程序的物理分组，对应于一个dll或exe文件。

17、Func(T,TResult)
	


   